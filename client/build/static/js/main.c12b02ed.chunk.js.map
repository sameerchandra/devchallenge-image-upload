{"version":3,"sources":["components/LinearProgress.js","components/Upload.js","App.js","reportWebVitals.js","components/theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","alignSelf","marginTop","spacing","LinearIndeterminate","classes","className","LinearProgress","withStyles","background","backgroundColor","borderRadius","props","handleClickChange","e","a","toggleLoading","data","FormData","append","target","files","axios","post","document","baseURI","then","result","statusText","setTimeout","liftStateUp","children","other","useState","loading","style","fontSize","color","marginBottom","fontWeight","height","justifySelf","src","alt","pointerEvents","Button","clsx","variant","component","onChange","type","hidden","App","loaded","setLoaded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","button","textTransform","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById"],"mappings":"mWAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,MACPC,UAAU,SACV,YAAa,CACXC,UAAWJ,EAAMK,QAAQ,SAKhB,SAASC,IACtB,IAAMC,EAAUT,IAEhB,OACE,qBAAKU,UAAWD,EAAQN,KAAxB,SACE,cAACQ,EAAA,EAAD,MC2DSC,kBArEA,CACXT,KAAK,CACDU,WAAW,UACX,UAAW,CAEPC,gBAAiB,WAErBC,aAAa,KA8DNH,EAzDf,SAAgBI,GAEZ,IAAMC,EAAiB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sDAEtBC,GAAc,IAEVC,EAAO,IAAIC,UACVC,OAAO,OAAQL,EAAEM,OAAOC,MAAM,IAEpCC,IAAMC,KAAN,UAAcC,SAASC,QAAvB,eAA6CR,EAAM,IAEnDS,MAAK,SAAAC,GACyB,OAAtBA,EAAOC,YACNC,YAAW,WACXb,GAAc,GACdJ,EAAMkB,aAAY,KAEf,QAfW,2CAAH,sDAsBfzB,EAA2CO,EAA3CP,QAAmBC,GAAwBM,EAAlCmB,SAAkCnB,EAAxBN,WAAc0B,EAxBvB,YAwBiCpB,EAxBjC,sCA0BcqB,oBAAS,GA1BvB,mBA0BXC,EA1BW,KA0BHlB,EA1BG,KA8BlB,OAEI,qBAAKV,UAAS,iBAAY4B,EAAU,QAAQ,IAA5C,SACKA,EACT,qCACA,qBAAKC,MAAO,CAACC,SAAS,GAAGC,MAAM,SAASrC,MAAM,MAAMsC,aAAa,IAAjE,0BACI,cAAClC,EAAD,OAGJ,qCACQ,sBAAKE,UAAU,WAAf,UACI,sBAAM6B,MAAO,CAACI,WAAW,MAAMH,SAAS,GAAGC,MAAM,WAAjD,+BACA,mBAAGF,MAAO,CAACjC,UAAU,GAAGmC,MAAM,WAA9B,yCACA,sBAAK/B,UAAU,YAAf,UACI,qBAAK6B,MAAO,CAACK,OAAO,MAAMxC,MAAM,MAAMyC,YAAY,UAAWC,IAAI,YAAYC,IAAI,YACjF,mBAAGR,MAAO,CAACE,MAAM,WAAjB,SAA8B,sCAGtC,qBAAKF,MAAO,CAACE,MAAM,UAAUC,aAAa,GAAGM,cAAc,QAA3D,gBACA,eAACC,EAAA,EAAD,yBAAQvC,UAAWwC,YAAKzC,EAAQN,KAAMO,IAAgB0B,GAAtD,IAA6De,QAAQ,YAAYV,MAAM,UAAUW,UAAU,QAA3G,0BAEJ,uBAAOC,SAAUpC,EAAmBqC,KAAK,OAAOC,QAAM,gBCpD/CC,MAhBf,WAAgB,IAAD,EAEcnB,oBAAS,GAFvB,mBAENoB,EAFM,KAECC,EAFD,KAQb,OACE,qBAAKhD,UAAU,WAAf,SAEG+C,EAAS,wBAAc,cAAC,EAAD,CAAQvB,YAPhB,SAACb,GACnBqC,EAAUrC,SCGCsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCGC1D,EARDiE,YAAe,CAC3BC,WAAY,CACVC,OAAQ,CACNC,cAAe,W,gBCGrBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAexE,MAAOA,EAAtB,UACE,cAACyE,EAAA,EAAD,IACA,cAAC,EAAD,SAGJ/C,SAASgD,eAAe,SAM1BjB,M","file":"static/js/main.c12b02ed.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"90%\",\n    alignSelf:\"center\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n    </div>\n  );\n}","import {React,useState} from 'react'\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/core/styles';\nimport axios from 'axios'\nimport LinearIndeterminate from './LinearProgress'\n\n\n\nconst styles = {\n    root:{\n        background:'#2f80ed',\n        \"&:hover\": {\n            //you want this to be the same as the backgroundColor above\n            backgroundColor: \"#2f80ed\",\n        },\n        borderRadius:10\n\n    },\n}\n\nfunction Upload(props){\n\n    const handleClickChange = async(e) =>{\n\n        toggleLoading(true)\n\n        var data = new FormData() \n        data.append('file', e.target.files[0])\n\n       axios.post(`${document.baseURI}/api/upload`, data, { \n      })\n      .then(result => {\n            if(result.statusText === \"OK\"){\n                setTimeout(() => {\n                toggleLoading(false)\n                props.liftStateUp(true)\n                    \n                }, 3000);\n            }\n      })\n    \n\n    }\n\n    const { classes, children, className, ...other } = props;\n\n    const [loading,toggleLoading] = useState(false)\n\n\n\n    return (\n        \n        <div className={`mainDiv${loading ? \"small\":\"\"}`}>\n            {loading ? \n    <>\n    <div style={{fontSize:20,color:'4f4f4f',width:'90%',marginBottom:15}}>Uploading...</div>\n        <LinearIndeterminate />\n        </>\n    :\n    <>\n            <div className=\"innerDiv\">\n                <span style={{fontWeight:\"400\",fontSize:30,color:\"#4f4f4f\"}}>Upload your image</span>\n                <p style={{marginTop:20,color:'#828282'}}>File should be Jpeg, Png...</p>\n                <div className=\"dragImage\">\n                    <img style={{height:\"40%\",width:\"40%\",justifySelf:\"center\"}} src=\"image.svg\" alt=\"imagesd\"></img>\n                    <p style={{color:'#bdbdbd'}}>{\"Drag & Drop your image here\"}</p>\n                </div>\n            </div>\n            <div style={{color:'#bdbdbd',marginBottom:25,pointerEvents:'none'}}>Or</div>\n            <Button className={clsx(classes.root, className)} {...other} variant=\"contained\" color=\"primary\" component=\"label\">\n        Choose a file\n        <input onChange={handleClickChange} type=\"file\" hidden></input>\n      </Button></>}\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Upload)","import { useState } from 'react';\nimport './App.css';\nimport Upload from './components/Upload'\n\nfunction App() {\n\n  const [loaded,setLoaded] = useState(false)\n\n  const liftStateUp = (data) => {\n    setLoaded(data)\n  }\n\n  return (\n    <div className=\"outerDiv\">\n\n      {loaded ? <div></div> : <Upload liftStateUp={liftStateUp}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({      \n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './components/theme'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <App/>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}